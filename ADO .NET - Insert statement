
using System;
using System.Data.SqlClient;




namespace PracticeCSharp
{

    struct stContact {
         public int ID , CountryID;
         public string FirstName;
         public string LastName;
         public string Address;
         public string Email;
         public string Phone;
    }



    class Program 

    {
        static string ConnectionString = "SERVER = localhost; Database = ContactsDB; User id = sa; Password = sa123456;";

        static int ReadCountry (string message)
        {
            Console.Write(message);
            string CountryName = Console.ReadLine();

            int ? CountryID = null;

            SqlConnection connection = new SqlConnection(ConnectionString);

            string query = "Select CountryID From Countries Where CountryName = @country ";

            SqlCommand command = new SqlCommand(query, connection);

            command.Parameters.AddWithValue("@country", CountryName);
            
            try
            {
                connection.Open();

                CountryID = (int?)command.ExecuteScalar();

                while (CountryID == null)
                {
                    Console.Write("Country Not Fount , Enter Again : ");
                    CountryName = Console.ReadLine();

                    command.Parameters.RemoveAt(0);
                    command.Parameters.AddWithValue("@country" , CountryName);

                    CountryID = (int?)command.ExecuteScalar();

                }
            }

            catch (Exception ex)
            {
                Console.WriteLine("Error , " + ex.Message);
            }

            return (int)CountryID;

        }
        static public stContact ReadContact() {

            Console.Write("FirstName : ");
            string FirstName = Console.ReadLine().Split(new[] { ' ' } )[0];
            
            Console.Write("LastName : ");
            string LastName = Console.ReadLine().Split(new[] { ' ' })[0];
            
            Console.Write("Phone : ");
            string Phone = Console.ReadLine().Split(new[] { ' ' })[0];

            Console.Write("Email : ");
            string Email = Console.ReadLine().Split(new[] { ' ' })[0];

            Console.Write("Address : ");
            string Address = Console.ReadLine();

            int Country = ReadCountry("Country Name : ");

            return new stContact
            {
                FirstName = FirstName,
                LastName = LastName,
                Phone = Phone,
                Email = Email,
                Address = Address,
                CountryID = Country

            };

        }
        public static void AddNewContact(stContact Contact)
        {

           
            SqlConnection connection = new SqlConnection(ConnectionString);

            string query = "Insert into Contacts (FirstName , LastName , Address , Email , Phone, CountryID )values (@FirstName , @LastName , @Address , @Email , @Phone , @CountryID);";

            try
            {
                connection.Open();

                var command = new SqlCommand( query , connection);

                command.Parameters.AddWithValue("@FirstName", Contact.FirstName);
                command.Parameters.AddWithValue("@LastName", Contact.LastName);
                command.Parameters.AddWithValue("@Phone", Contact.Phone);
                command.Parameters.AddWithValue("@Address", Contact.Address);
                command.Parameters.AddWithValue("@Email", Contact.Email);
                command.Parameters.AddWithValue("@CountryID", Contact.CountryID);

                int NumberOfRowsAffected = command.ExecuteNonQuery();

                if (NumberOfRowsAffected > 0)
                    Console.WriteLine("Added Successfully !!");
                else
                    Console.WriteLine("Not Added :-(");

                connection.Close();
                
            }
            catch(Exception ex)
            {
                Console.WriteLine("Error occured : " + ex.Message);
            }
        }

        static void Main(string[] args)
        {

            AddNewContact(ReadContact());
        }
    }


}





